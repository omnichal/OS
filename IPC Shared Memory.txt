#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <string.h>
#include <sys/types.h>
#include <sys/ipc.h>
#include <sys/shm.h>

// Server Program
void server_program(int shmid) {
    char *shared_memory = (char *)shmat(shmid, NULL, 0);
    if (shared_memory == (char *)-1) {
        perror("Shared memory attachment failed");
        exit(1);
    }

    strcpy(shared_memory, "Hello, this is a message from the server!");
    printf("Server wrote: %s\n", shared_memory);

    // Detach shared memory segment
    if (shmdt(shared_memory) == -1) {
        perror("Failed to detach shared memory");
        exit(1);
    }
}

// Client Program
void client_program(int shmid) {
    char *shared_memory = (char *)shmat(shmid, NULL, 0);
    if (shared_memory == (char *)-1) {
        perror("Shared memory attachment failed");
        exit(1);
    }

    printf("Client read: %s\n", shared_memory);

    // Detach shared memory segment
    if (shmdt(shared_memory) == -1) {
        perror("Failed to detach shared memory");
        exit(1);
    }
}

int main() {
    int shmid = shmget(IPC_PRIVATE, 1024, IPC_CREAT | 0666);
    if (shmid == -1) {
        perror("Failed to create shared memory");
        exit(1);
    }

    pid_t pid = fork();
    if (pid == 0) { // Server
        server_program(shmid);
    } else { // Client
        client_program(shmid);
    }

    // Remove shared memory segment
    if (shmctl(shmid, IPC_RMID, NULL) == -1) {
        perror("Failed to remove shared memory");
        exit(1);
    }

    return 0;
}